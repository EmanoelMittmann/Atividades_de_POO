// <auto-generated />
using System;
using Biblioteca.WebApi.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Biblioteca.WebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220708034313_InitialMigrations")]
    partial class InitialMigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("Biblioteca.WebApi.Domain.Entity.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("autor", (string)null);
                });

            modelBuilder.Entity("Biblioteca.WebApi.Domain.Entity.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("cpf");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("nome");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("telefone");

                    b.HasKey("Id");

                    b.ToTable("cliente", (string)null);
                });

            modelBuilder.Entity("Biblioteca.WebApi.Domain.Entity.Editora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("cidade");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("editora", (string)null);
                });

            modelBuilder.Entity("Biblioteca.WebApi.Domain.Entity.Emprestimo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("cliente_id");

                    b.Property<DateTime>("DataDevolucao")
                        .HasColumnType("SMALLDATETIME")
                        .HasColumnName("data_devolucao");

                    b.Property<DateTime>("DataEmprestimo")
                        .HasColumnType("SMALLDATETIME")
                        .HasColumnName("data_emprestimo");

                    b.Property<int>("LivroId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("livro_id");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("LivroId")
                        .IsUnique();

                    b.ToTable("emprestimo", (string)null);
                });

            modelBuilder.Entity("Biblioteca.WebApi.Domain.Entity.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("genero", (string)null);
                });

            modelBuilder.Entity("Biblioteca.WebApi.Domain.Entity.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("EditoraId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("editora_id");

                    b.Property<int>("GeneroId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("genero_id");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("titulo");

                    b.Property<int>("Volume")
                        .HasColumnType("INTEGER")
                        .HasColumnName("volume");

                    b.HasKey("Id");

                    b.HasIndex("EditoraId");

                    b.HasIndex("GeneroId");

                    b.ToTable("livro", (string)null);
                });

            modelBuilder.Entity("livro_autor", b =>
                {
                    b.Property<int>("autor_id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("livro_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("autor_id", "livro_id");

                    b.HasIndex("livro_id");

                    b.ToTable("livro_autor");
                });

            modelBuilder.Entity("Biblioteca.WebApi.Domain.Entity.Emprestimo", b =>
                {
                    b.HasOne("Biblioteca.WebApi.Domain.Entity.Cliente", "Cliente")
                        .WithMany("Emprestimos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Emprestimo_Cliente");

                    b.HasOne("Biblioteca.WebApi.Domain.Entity.Livro", "Livro")
                        .WithOne("Emprestimo")
                        .HasForeignKey("Biblioteca.WebApi.Domain.Entity.Emprestimo", "LivroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Emprestimo_Livro");

                    b.Navigation("Cliente");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("Biblioteca.WebApi.Domain.Entity.Livro", b =>
                {
                    b.HasOne("Biblioteca.WebApi.Domain.Entity.Editora", "Editora")
                        .WithMany("Livros")
                        .HasForeignKey("EditoraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Livro_Editora");

                    b.HasOne("Biblioteca.WebApi.Domain.Entity.Genero", "Genero")
                        .WithMany("Livros")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Livro_Genero");

                    b.Navigation("Editora");

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("livro_autor", b =>
                {
                    b.HasOne("Biblioteca.WebApi.Domain.Entity.Autor", null)
                        .WithMany()
                        .HasForeignKey("autor_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_livro_autor_autor_id");

                    b.HasOne("Biblioteca.WebApi.Domain.Entity.Livro", null)
                        .WithMany()
                        .HasForeignKey("livro_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_livro_autor_livro_id");
                });

            modelBuilder.Entity("Biblioteca.WebApi.Domain.Entity.Cliente", b =>
                {
                    b.Navigation("Emprestimos");
                });

            modelBuilder.Entity("Biblioteca.WebApi.Domain.Entity.Editora", b =>
                {
                    b.Navigation("Livros");
                });

            modelBuilder.Entity("Biblioteca.WebApi.Domain.Entity.Genero", b =>
                {
                    b.Navigation("Livros");
                });

            modelBuilder.Entity("Biblioteca.WebApi.Domain.Entity.Livro", b =>
                {
                    b.Navigation("Emprestimo");
                });
#pragma warning restore 612, 618
        }
    }
}
